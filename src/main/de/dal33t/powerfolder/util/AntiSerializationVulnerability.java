/*
 * Copyright 2004 - 2015 Christian Sprajc. All rights reserved.
 *
 * This file is part of PowerFolder.
 *
 * PowerFolder is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation.
 *
 * PowerFolder is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PowerFolder. If not, see <http://www.gnu.org/licenses/>.
 *
 * $Id: Util.java 20555 2012-12-25 04:15:08Z glasgow $
 */
package de.dal33t.powerfolder.util;

/**
 * PFS-1858/PFC-2843: Prevent possible attack through Apache commons collections /
 * InvokerTransformer
 * 
 * @author sprajc
 */
public class AntiSerializationVulnerability {

    /**
     * Block of malicious classes.
     * TODO: Change to Whitelist.
     */
    public static final String[] BLACKLIST = new String[]{
        "org.apache.commons.fileupload.FileUpload",
        "org.apache.commons.fileupload.FileUploadBase",
        "org.apache.commons.fileupload.disk.DiskFileItem"};
    
    /**
     * TODO: Finish whitelist
     */
    public static final String[] WHITELIST = new String[]{
        "de.dal33t.powerfolder.message.",
        "de.dal33t.powerfolder.light.",
        "de.dal33t.powerfolder.security.",
        "de.dal33t.powerfolder.Encryption",
        "java.lang.",
        "java.util.",
        "java.sql.",
        "java.net.",
        "java.security.",
        "sun.util.calendar.",
        "java.sql.",
        "[B",
        "[I",
        "[J",
        "[L",
        "[Z"
        // [Ljava.util.concurrent.ConcurrentHashMap$Segment;
        // [Ljava.lang.StackTraceElement;
    };
   

    private static final String[] CLASSES = new String[]{
        "org.apache.commons.collections.functors.InvokerTransformer",
        "org.apache.commons.collections.functors.ChainedTransformer",
        "org.apache.commons.collections.functors.ConstantTransformer",
        "org.apache.commons.collections.functors.InstantiateTransformer"};

    private AntiSerializationVulnerability() {
    }

    public static void check() {
        for (int i = 0; i < CLASSES.length; i++) {
            String className = CLASSES[i];
            try {
                Class.forName(className);
                String msg = "Found potential vulnerable class " + className
                    + ". Please remove it from classpath.";
                System.err.println(msg);
                System.exit(99);
            } catch (ClassNotFoundException e) {
                // OK!
            }
        }
    }
}
